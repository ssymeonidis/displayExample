/*
 * This file is part of quaternion-based displayIMU C/C++/QT code base
 * (https://github.com/ssymeonidis/displayIMU.git)
 * Copyright (c) 2018 Simeon Symeonidis (formerly Sensor Management Real
 * Time (SMRT) Processing Solutions)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef WINDOW_H
#define WINDOW_H

// include statements
#include <GL/gl.h>
#include <QMainWindow>

// generated by qtcreator
namespace Ui {
  class window;
}


class window : public QMainWindow
{
  Q_OBJECT

public:
  explicit window(const char* vShader, const char* fShader, 
    QWidget *parent = 0);
  ~window();
  void     addTextureEmpty (int       width,    int          height,
                            GLenum    format,   GLenum       type,
                            GLint     internal, const char*  name);
  void     textureLock     (int       id);
  void     textureRaw      (int       id,       void*        data);

protected:
  void     keyPressEvent   (QKeyEvent   *event);

private slots:
  void     updateMask      ();

private:
  Ui::window *ui;
};

#endif // WINDOW_H
